# docker-compose.yml
version: '3.8'

services:
  # --- Serviço do Banco de Dados (PostgreSQL) ---
  db:
    image: postgres:15
    container_name: sistema-trocas-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-userdev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passdev}
      POSTGRES_DB: ${POSTGRES_DB:-trocasdb}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-userdev} -d ${POSTGRES_DB:-trocasdb}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Serviço da API Backend (Fastify) ---
  backend:
    build:
      context: . # <-- RAIZ DO MONOREPO
      dockerfile: ./apps/backend/Dockerfile # <-- CAMINHO COMPLETO PARA O DOCKERFILE
    container_name: sistema-trocas-backend
    restart: unless-stopped
    env_file:
      - ./apps/backend/.env
    ports:
      - '${BACKEND_HOST_PORT:-3333}:${BACKEND_PORT:-3333}'
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: ${BACKEND_PORT:-3333}
    # volumes: # Removido ou comentado se não houver mapeamentos
    # pass:

  # --- Serviço do Frontend (Next.js) ---
  frontend:
    build:
      context: . # <-- RAIZ DO MONOREPO
      dockerfile: ./apps/frontend/Dockerfile # <-- CAMINHO COMPLETO PARA O DOCKERFILE
      args:
        # Passa a variável para o Dockerfile do frontend durante o build.
        # O valor aqui deve ser a URL PÚBLICA da sua API no servidor Linux.
        NEXT_PUBLIC_API_URL: http://10.10.100.79:3333 # Ou use uma variável do .env da raiz
        # Exemplo usando variável do .env da raiz:
        # NEXT_PUBLIC_API_URL: ${PROD_NEXT_PUBLIC_API_URL:-http://10.10.100.79:3333}
      # ---- FIM DA SEÇÃO 'args' ----
    container_name: sistema-trocas-frontend
    restart: unless-stopped
    ports:
      - '${FRONTEND_HOST_PORT:-3000}:3000'
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:${BACKEND_PORT:-3333}
      NODE_ENV: production
      PORT: 3000
    # volumes: # Removido ou comentado se não houver mapeamentos

volumes:
  postgres_data:
# networks:
#   app_network:
#     driver: bridge
